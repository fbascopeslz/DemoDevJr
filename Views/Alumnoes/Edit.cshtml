@model DemoDevJr.Models.Alumno

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdm.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Alumno</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.alumnoId)

    <div class="form-group">
        @Html.LabelFor(model => model.rude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="file-upload-form">
                <input type="file" id="imagenAlumno" accept="image/*" class="form-control">
            </div>
            <div id="ocultarImagenAlumno" class="image-preview">
                <img id="imagenPreviewAlumno" class="preview" src="@Model.imagen">
            </div>

            <input type="hidden" name="imagen" id="inputUrlImagenAlumno" />
            @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombres, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.apellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellidoPaterno, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellidoPaterno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.apellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellidoMaterno, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellidoMaterno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.sexo, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lugarNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lugarNacimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lugarNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">            
            <input name="fechaNacimiento" type="date" class="form-control" value="@Model.fechaNacimiento">
            @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ci, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ci, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ci, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.direccion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.zona, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.zona, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.zona, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            <a href="@Url.Action("Index", "Alumnoes")" type="button" class="btn btn-secondary">Atras</a>
        </div>
    </div>
</div>
}


<style>
    .file-upload-form, .image-preview {
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        padding: 20px;
    }

    img.preview {
        width: 300px;
        background-color: white;
        border: 1px solid #DDD;
        padding: 5px;
    }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
